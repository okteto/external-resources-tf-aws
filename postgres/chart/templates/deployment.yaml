apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgres.database }}
        - name: POSTGRES_USER
          value: {{ .Values.postgres.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres.password }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - pg_isready -U {{ .Values.postgres.username }} -d {{ .Values.postgres.database }}
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - pg_isready -U {{ .Values.postgres.username }} -d {{ .Values.postgres.database }}
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: postgres-storage
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: postgres-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}